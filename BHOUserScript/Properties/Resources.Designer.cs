//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BHOUserScript.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("BHOUserScript.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Oops! Unable to automatically install the script. Please try again or install the script manually..
        /// </summary>
        public static string AutomaticAddFailError {
            get {
                return ResourceManager.GetString("AutomaticAddFailError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Scriptmonkey is being set up for first time use. Please stand by. Your browser may appear unresponsive..
        /// </summary>
        public static string FirstTimeSetup {
            get {
                return ResourceManager.GetString("FirstTimeSetup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Finished settings up Scriptmonkey. Enjoy! :).
        /// </summary>
        public static string FirstTimeSetupDone {
            get {
                return ResourceManager.GetString("FirstTimeSetupDone", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap Icon {
            get {
                object obj = ResourceManager.GetObject("Icon", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
        /// </summary>
        public static System.Drawing.Icon Icon1 {
            get {
                object obj = ResourceManager.GetObject("Icon1", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to abstract arguments boolean break byte case catch char class const continue debugger default delete do double else enum eval export extends false final finally float for function goto if implements import in instanceof int interface let long native new null package private protected public return short static super switch synchronized this throw throws transient true try typeof var void volatile while with yield Array Date eval function hasOwnProperty Infinity isFinite isNaN isPrototypeOf length Math NaN nam [rest of string was truncated]&quot;;.
        /// </summary>
        public static string JsKeywords {
            get {
                return ResourceManager.GetString("JsKeywords", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        public static byte[] Newtonsoft_Json {
            get {
                object obj = ResourceManager.GetObject("Newtonsoft_Json", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        public static byte[] ScintillaNET {
            get {
                object obj = ResourceManager.GetObject("ScintillaNET", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap search {
            get {
                object obj = ResourceManager.GetObject("search", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Scriptmonkey.
        /// </summary>
        public static string Title {
            get {
                return ResourceManager.GetString("Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;;.
        /// </summary>
        public static string WrapperJS_After {
            get {
                return ResourceManager.GetString("WrapperJS_After", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to function GM_deleteValue(e){window.Scriptmonkey.deleteScriptValue(e,scriptIndex,apiKey)}function GM_getValue(e,t){return window.Scriptmonkey.getScriptValue(e,t,scriptIndex,apiKey)}function GM_listValues(){return window.Scriptmonkey.getScriptValuesList(scriptIndex,apiKey)}function GM_setValue(e,t){window.Scriptmonkey.setScriptValue(e,t,scriptIndex,apiKey)}function GM_addStyle(e){css=document.createElement(&apos;style&apos;),css.type=&apos;text/css&apos;,css.innerHTML=e,document.body.appendChild(css)}function GM_openInTab(e){wind [rest of string was truncated]&quot;;.
        /// </summary>
        public static string WrapperJS_Before {
            get {
                return ResourceManager.GetString("WrapperJS_Before", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ,unsafeWindow=window,apiKey=&apos;.
        /// </summary>
        public static string WrapperJS_Mid {
            get {
                return ResourceManager.GetString("WrapperJS_Mid", resourceCulture);
            }
        }
    }
}
